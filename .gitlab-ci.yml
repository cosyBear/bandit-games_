image: gradle:8.11.0-jdk21

before_script:
  - chmod +x gradlew
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

stages:
  - build
  - test
  - sonarqube-check
  - sonarqube-vulnerability-report
  - build-deploy
  - deploy

variables:
  MODULES: "application common library friends"
  TEST_ONLY_MODULES: "friends"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .gradle/caches/
    - gradle/wrapper/
    - buildSrc/.gradle/

build:
  stage: build
  script:
    - echo "Building Changed Modules"
    - |
      for MODULE in $MODULES; do
        if git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep -q "^$MODULE/"; then
          echo "Building module $MODULE"
          ./gradlew --no-daemon --build-cache --parallel :$MODULE:build -x test
        else
          echo "Skipping module $MODULE"
        fi
      done
  artifacts:
    paths:
      - friends/build/libs/
      - library/build/libs/
    when: always

test:
  stage: test
  image: eclipse-temurin:21-jdk
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  script:
    - echo "Running tests with Testcontainers"
    - ./gradlew $TEST_ONLY_MODULES:test jacocoTestReport --no-daemon --max-workers 4 --info
  artifacts:
    paths:
      - $TEST_ONLY_MODULES/build/test-results/
      - $TEST_ONLY_MODULES/build/reports/jacoco/
    when: always
    reports:
      junit: $TEST_ONLY_MODULES/build/test-results/test/*.xml
  coverage: '/TOTAL\s+\d+\%\s+/'

sonarqube-check:
  image: gradle:8.2.0-jdk17-jammy
  stage: sonarqube-check
  script:
    - gradle sonar
  allow_failure: true
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#    - if: $CI_COMMIT_BRANCH == 'main'

sonarqube-vulnerability-report:
  image: gradle:8.2.0-jdk17-jammy
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=kdg-ti_integration-5_2024-2025_team8_bandit-games_d0e14ee5-4e21-4165-bea0-ff78251053bb&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event''
#    - if: $CI_COMMIT_BRANCH == 'main'
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json

build-deploy:
  stage: build-deploy
  image: gradle:8.11.0-jdk21
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  script:
    - echo "Building and Pushing Docker Image"
    - ./gradlew clean bootBuildImage
  only:
    - tags

deploy:
  image: mcr.microsoft.com/azure-cli
  stage: deploy
  before_script:
    - az login --service-principal -u $AZURE_APP_ID -p $AZURE_PASSWORD --tenant $AZURE_TENANT
    - az extension add --name containerapp --upgrade
  script:
    - echo "Deploying Azure Container App"
    - az containerapp up --name bandit-backend --resource-group rg-banditgames --location northeurope --environment banditgames-environment --target-port 8090 --ingress external --image "acrbanditgames.azurecr.io/integration5:latest"
  only:
    - tags
